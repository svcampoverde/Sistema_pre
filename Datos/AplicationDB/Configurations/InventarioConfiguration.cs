// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using Datos.AplicationDB;
using Datos.Models;

namespace Datos.AplicationDB.Configurations
{
    public partial class InventarioConfiguration : IEntityTypeConfiguration<Inventario>
    {
        public void Configure(EntityTypeBuilder<Inventario> entity)
        {
            entity.HasKey(e => e.Id)
                .HasName("PRIMARY");

            entity.ToTable("inventario");

            entity.HasIndex(e => e.Idproducto).HasName("producto_inventariofk");

            entity.HasIndex(e => e.Idusuario).HasName("usuario_inventariofk");

            entity.Property(e => e.Id).HasColumnName("idinventario");

            entity.Property(e => e.Cambio)
                .HasMaxLength(100)
                .HasColumnName("cambio");

            entity.Property(e => e.CantidadDisponible).HasColumnName("cantidadDisponible");

            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(1)
                .HasColumnName("estado")
                .IsFixedLength();

            entity.Property(e => e.EstadoProducto)
                .IsRequired()
                .HasMaxLength(45)
                .HasColumnName("estadoProducto");

            entity.Property(e => e.FechaAdquirido).HasColumnName("fechaadquirido");

            entity.Property(e => e.Idproducto).HasColumnName("idproducto");

            entity.Property(e => e.Idusuario).HasColumnName("idusuario");

            entity.Property(e => e.TipoMaterial)
                .IsRequired()
                .HasMaxLength(60)
                .HasColumnName("tipoMaterial");

            entity.HasOne(d => d.IdproductoNavigation)
                .WithMany(p => p.Inventarios)
                .HasForeignKey(d => d.Idproducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("producto_inventariofk");

            entity.HasOne(d => d.IdusuarioNavigation)
                .WithMany(p => p.Inventarios)
                .HasForeignKey(d => d.Idusuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("usuario_inventariofk");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Inventario> entity);
    }
}
