// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using Datos.AplicationDB;
using Datos.Models;

namespace Datos.AplicationDB.Configurations
{
    public partial class ProveedorConfiguration : IEntityTypeConfiguration<Proveedor>
    {
        public void Configure(EntityTypeBuilder<Proveedor> entity)
        {
            entity.HasKey(e => e.Id)
                .HasName("PRIMARY");

            entity.ToTable("proveedor");

            entity.HasIndex(e => e.Idciudad).HasName("ciudad_proveedorfk");

            entity.HasIndex(e => e.Idcuenta).HasName("cuenta_proveedorfk");

            entity.HasIndex(e => e.Idempresa).HasName("empresa_proveedorfk");

            entity.HasIndex(e => e.Idpago).HasName("pago_proveedorfk");

            entity.HasIndex(e => e.Idpersona).HasName("proveedor_personafk");

            entity.HasIndex(e => e.Idservicio).HasName("servicio_proveedorfk");

            entity.Property(e => e.Id).HasColumnName("idproveedor");

            entity.Property(e => e.Empresa)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("empresa");

            entity.Property(e => e.Idciudad).HasColumnName("idciudad");

            entity.Property(e => e.Idcuenta).HasColumnName("idcuenta");

            entity.Property(e => e.Idempresa).HasColumnName("idempresa");

            entity.Property(e => e.Idpago).HasColumnName("idpago");

            entity.Property(e => e.Idpersona).HasColumnName("idpersona");

            entity.Property(e => e.Idservicio).HasColumnName("idservicio");

            entity.Property(e => e.Tiposervicio)
                .IsRequired()
                .HasMaxLength(80)
                .HasColumnName("tiposervicio");

            entity.HasOne(d => d.IdciudadNavigation)
                .WithMany(p => p.Proveedors)
                .HasForeignKey(d => d.Idciudad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("ciudad_proveedorfk");

            entity.HasOne(d => d.IdcuentaNavigation)
                .WithMany(p => p.Proveedors)
                .HasForeignKey(d => d.Idcuenta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("cuenta_proveedorfk");

            entity.HasOne(d => d.IdempresaNavigation)
                .WithMany(p => p.Proveedors)
                .HasForeignKey(d => d.Idempresa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("empresa_proveedorfk");

            entity.HasOne(d => d.IdpagoNavigation)
                .WithMany(p => p.Proveedors)
                .HasForeignKey(d => d.Idpago)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("pago_proveedorfk");

            entity.HasOne(d => d.IdpersonaNavigation)
                .WithMany(p => p.Proveedors)
                .HasForeignKey(d => d.Idpersona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("proveedor_personafk");

            entity.HasOne(d => d.IdservicioNavigation)
                .WithMany(p => p.Proveedors)
                .HasForeignKey(d => d.Idservicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("servicio_proveedorfk");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Proveedor> entity);
    }
}
