// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using Datos.AplicationDB;
using Datos.Models;

namespace Datos.AplicationDB.Configurations
{
    public partial class UsuarioConfiguration : IEntityTypeConfiguration<Usuario>
    {
        public void Configure(EntityTypeBuilder<Usuario> entity)
        {
            entity.HasKey(e => e.Id)
                .HasName("PRIMARY");

            entity.ToTable("usuario");

            entity.HasIndex(e => e.Us).HasName("usuario")
                .IsUnique();

            entity.HasIndex(e => e.Idpersona).HasName("usuario_personafk");

            entity.HasIndex(e => e.Idrol).HasName("usuario_rolfk");

            entity.Property(e => e.Id).HasColumnName("idusuario");

            entity.Property(e => e.Clave)
                .IsRequired()
                .HasMaxLength(300)
                .HasColumnName("clave");

            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(1)
                .HasColumnName("estado")
                .IsFixedLength();

            entity.Property(e => e.Idpersona).HasColumnName("idpersona");

            entity.Property(e => e.Idrol).HasColumnName("idrol");

            entity.Property(e => e.Us)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("us");

            entity.HasOne(d => d.IdpersonaNavigation)
                .WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.Idpersona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("usuario_personafk");

            entity.HasOne(d => d.IdrolNavigation)
                .WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.Idrol)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("usuario_rolfk");
            entity.HasQueryFilter(e => e.Estado == "A");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Usuario> entity);
    }
}
